{"version":3,"sources":["redux/PhoneBook/actions.js","redux/PhoneBook/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactList.styled.jsx","components/ContactsList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.js","components/App/App.js","redux/PhoneBook/reducers.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","removeContact","getFilterName","contacts","state","items","filter","visibleContacts","getFilter","getContacts","contact","toLowerCase","includes","Form","styled","form","Label","label","Input","input","Button","button","ContactForm","useState","setName","setNumber","stateContacts","useSelector","dispatch","useDispatch","handleChange","e","target","value","newContact","contactToAdd","some","toast","notify","action","onSubmit","preventDefault","htmlFor","onChange","type","pattern","title","required","position","toastOptions","duration","style","background","color","List","ul","ListItem","li","ContactList","filteredContacts","map","onClick","Wrapper","div","Filter","formFilter","PrimaryTitle","h1","SecondaryTitle","h2","App","setContacts","setFilter","useEffect","storageContacts","localStorage","getItem","storageContactsParced","JSON","parse","setItem","stringify","deleteId","itemReducer","createReducer","filterReducer","contactsReducer","combineReducers","persistConfig","key","storage","rootReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6129ff24.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addContact = createAction(\r\n  \"contact/addContact\",\r\n  ({ name, number }) => ({\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  })\r\n);\r\n\r\nexport const removeContact = createAction(\"contact/removeContact\");\r\nexport const getFilterName = createAction(\"contact/filteredContacts\");\r\n","export const contacts = (state) => state.contacts.items;\r\nexport const filter = (state) => state.contacts.filter;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const visibleContacts = (state) => {\r\n  const filter = getFilter(state);\r\n  const contacts = getContacts(state);\r\n  if (filter !== \"\") {\r\n    if (contacts !== []) {\r\n      return contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(filter)\r\n      );\r\n    }\r\n  } else {\r\n    return contacts;\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 70px;\r\n  padding: 10px 200px 10px 10px;\r\n  border: 2px solid black;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 3px;\r\n  margin-top: 5px;\r\n  margin-bottom: 15px;\r\n  &:hover {\r\n    border-color: blue;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: fit-content;\r\n  padding: 4px;\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: blue;\r\n    border-color: blue;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { addContact } from \"../../redux/PhoneBook/actions\";\r\nimport { contacts } from \"../../redux/PhoneBook/selectors\";\r\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const stateContacts = useSelector(contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"name\":\r\n        setName(e.target.value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    newContact();\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const notify = (name) => toast(`${name} is already in contacts`);\r\n\r\n  const newContact = () => {\r\n    const contactToAdd = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    stateContacts.some((contact) => contact.name === contactToAdd.name)\r\n      ? notify(contactToAdd.name)\r\n      : dispatch(addContact(contactToAdd));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form action=\"\" onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"name\">Name</Label>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <Label htmlFor=\"number\">Number</Label>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n      <Toaster\r\n        position=\"top-center\"\r\n        toastOptions={{\r\n          duration: 3000,\r\n          style: {\r\n            background: \"#f8cd98\",\r\n            color: \"#000\",\r\n          },\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  margin-left: 70px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 3px 6px;\r\n  margin-left: 10px;\r\n  font-size: 12px;\r\n  background-color: #fff;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: blue;\r\n    border-color: blue;\r\n  }\r\n`;\r\n","import { List, ListItem, Button } from \"./ContactList.styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/PhoneBook/actions\";\r\nimport { visibleContacts } from \"../../redux/PhoneBook/selectors\";\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const filteredContacts = useSelector(visibleContacts);\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        {filteredContacts.map((contact) => {\r\n          const { id, name, number } = contact;\r\n          return (\r\n            <ListItem key={id}>\r\n              {name} - {number}\r\n              <Button type=\"button\" onClick={() => dispatch(removeContact(id))}>\r\n                Delete\r\n              </Button>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 70px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 3px;\r\n  margin-top: 5px;\r\n  &:hover {\r\n    border-color: blue;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n`;\r\n","import { Wrapper, Input, Label } from \"./Filter.styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilterName } from \"../../redux/PhoneBook/actions\";\r\nimport { filter } from \"../../redux/PhoneBook/selectors\";\r\n\r\nconst Filter = () => {\r\n  const formFilter = useSelector(filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={formFilter}\r\n        onChange={(e) => dispatch(getFilterName(e.target.value.toLowerCase()))}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"@emotion/styled\";\n\nexport const PrimaryTitle = styled.h1`\n  margin-left: 70px;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-left: 70px;\n`;\n","import { useState, useEffect } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactsList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport { PrimaryTitle, SecondaryTitle } from \"./App.styled\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const storageContacts = localStorage.getItem(\"contacts\");\n    const storageContactsParced = JSON.parse(storageContacts);\n\n    if (storageContactsParced) {\n      setContacts([...storageContactsParced]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const notify = (name) => toast(`${name} is already in contacts`);\n\n  const addContact = (name, number) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    contacts.some((contact) => contact.name === newContact.name)\n      ? notify(newContact.name)\n      : setContacts([...contacts, newContact]);\n  };\n\n  const deleteContact = (id) => {\n    return setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const handleFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const visibleContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <>\n      <Toaster\n        position=\"top-center\"\n        toastOptions={{\n          duration: 3000,\n          style: {\n            background: \"red\",\n            color: \"#000\",\n          },\n        }}\n      />\n      <PrimaryTitle>Phonebook</PrimaryTitle>\n      <ContactForm onSubmit={addContact} />\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter onChange={handleFilter} value={filter} />\n      <ContactList contacts={visibleContacts()} deleteId={deleteContact} />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, removeContact, getFilterName } from \"./actions\";\r\n\r\nconst itemReducer = createReducer(\r\n  [\r\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  ],\r\n  {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [removeContact]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  }\r\n);\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [getFilterName]: (state, { payload }) => (state = payload),\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./PhoneBook/reducers\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./components/App/App\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}