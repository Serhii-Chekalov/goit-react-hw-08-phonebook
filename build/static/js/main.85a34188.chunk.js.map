{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactList.styled.jsx","components/ContactsList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","action","preventDefault","htmlFor","onChange","type","pattern","title","required","List","ul","ListItem","li","ContactList","contacts","deleteId","map","contact","id","onClick","Wrapper","div","Filter","PrimaryTitle","h1","SecondaryTitle","h2","App","setContacts","filter","setFilter","useEffect","storageContacts","localStorage","getItem","storageContactsParced","JSON","parse","setItem","stringify","position","toastOptions","duration","style","background","color","newContact","uuidv4","some","toast","notify","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85a34188.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 70px;\r\n  padding: 10px 200px 10px 10px;\r\n  border: 2px solid black;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 3px;\r\n  margin-top: 5px;\r\n  margin-bottom: 15px;\r\n  &:hover {\r\n    border-color: blue;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: fit-content;\r\n  padding: 4px;\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: blue;\r\n    border-color: blue;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"name\":\r\n        setName(e.target.value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form action=\"\" onSubmit={handleSubmit}>\r\n      <Label htmlFor=\"name\">Name</Label>\r\n      <Input\r\n        onChange={handleChange}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n      <Label htmlFor=\"number\">Number</Label>\r\n      <Input\r\n        onChange={handleChange}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  margin-left: 70px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 3px 6px;\r\n  margin-left: 10px;\r\n  font-size: 12px;\r\n  background-color: #fff;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: blue;\r\n    border-color: blue;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { List, ListItem, Button } from \"./ContactList.styled\";\r\n\r\nconst ContactList = ({ contacts, deleteId }) => (\r\n  <div>\r\n    <List>\r\n      {contacts.map((contact) => {\r\n        const { id, name, number } = contact;\r\n        return (\r\n          <ListItem key={id}>\r\n            {name} - {number}{\" \"}\r\n            <Button type=\"button\" onClick={() => deleteId(id)}>\r\n              Delete\r\n            </Button>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  </div>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  deleteId: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 70px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 3px;\r\n  margin-top: 5px;\r\n  &:hover {\r\n    border-color: blue;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper, Input, Label } from \"./Filter.styled\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\r\n      <Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"@emotion/styled\";\n\nexport const PrimaryTitle = styled.h1`\n  margin-left: 70px;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-left: 70px;\n`;\n","import { useState, useEffect } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactsList/ContactList\";\nimport Filter from \"../Filter/Filter\";\nimport { PrimaryTitle, SecondaryTitle } from \"./App.styled\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const storageContacts = localStorage.getItem(\"contacts\");\n    const storageContactsParced = JSON.parse(storageContacts);\n\n    if (storageContactsParced) {\n      setContacts([...storageContactsParced]);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const notify = (name) => toast(`${name} is already in contacts`);\n\n  const addContact = (name, number) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    contacts.some((contact) => contact.name === newContact.name)\n      ? notify(newContact.name)\n      : setContacts([...contacts, newContact]);\n  };\n\n  const deleteContact = (id) => {\n    return setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  const handleFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const visibleContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  return (\n    <>\n      <Toaster\n        position=\"top-center\"\n        toastOptions={{\n          duration: 3000,\n          style: {\n            background: \"red\",\n            color: \"#000\",\n          },\n        }}\n      />\n      <PrimaryTitle>Phonebook</PrimaryTitle>\n      <ContactForm onSubmit={addContact} />\n      <SecondaryTitle>Contacts</SecondaryTitle>\n      <Filter onChange={handleFilter} value={filter} />\n      <ContactList contacts={visibleContacts()} deleteId={deleteContact} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}