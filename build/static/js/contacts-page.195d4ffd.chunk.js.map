{"version":3,"sources":["components/ContactsList/ContactList.styled.jsx","redux/PhoneBook/PhonebookSelectors.js","components/ContactsList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","views/ContactsView.js"],"names":["List","styled","ul","ListItem","li","Button","button","contacts","state","items","filter","visibleContacts","getFilter","getContacts","contact","name","toLowerCase","includes","ContactList","dispatch","useDispatch","filteredContacts","useSelector","map","id","number","type","onClick","removeContact","Form","form","Label","label","Input","input","ContactForm","useState","setName","setNumber","stateContacts","handleChange","e","target","value","newContact","contactToAdd","some","toast","notify","addContact","action","onSubmit","preventDefault","htmlFor","onChange","pattern","title","required","position","toastOptions","duration","style","background","color","Wrapper","div","Filter","formFilter","getFilterName","ContactsView","params","useEffect","fetchContactsAction"],"mappings":"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","file":"static/js/contacts-page.195d4ffd.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  margin-left: 70px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 3px 6px;\r\n  margin-left: 10px;\r\n  font-size: 12px;\r\n  background-color: #fff;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: blue;\r\n    border-color: blue;\r\n  }\r\n`;\r\n","export const contacts = (state) => state.contacts.items;\r\nexport const filter = (state) => state.contacts.filter;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const visibleContacts = (state) => {\r\n  const filter = getFilter(state);\r\n  const contacts = getContacts(state);\r\n  if (filter !== \"\") {\r\n    if (contacts !== []) {\r\n      return contacts.filter((contact) =>\r\n        contact.name.toLowerCase().includes(filter)\r\n      );\r\n    }\r\n  } else {\r\n    return contacts;\r\n  }\r\n};\r\n","import { List, ListItem, Button } from \"./ContactList.styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/PhoneBook/PhonebookActions\";\r\nimport { visibleContacts } from \"../../redux/PhoneBook/PhonebookSelectors\";\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const filteredContacts = useSelector(visibleContacts);\r\n\r\n  return (\r\n    <div>\r\n      <List>\r\n        {filteredContacts.map((contact) => {\r\n          const { id, name, number } = contact;\r\n          return (\r\n            <ListItem key={id}>\r\n              {name} - {number}\r\n              <Button type=\"button\" onClick={() => dispatch(removeContact(id))}>\r\n                Delete\r\n              </Button>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 70px;\r\n  padding: 10px 200px 10px 10px;\r\n  border: 2px solid black;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 3px;\r\n  margin-top: 5px;\r\n  margin-bottom: 15px;\r\n  &:hover {\r\n    border-color: blue;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: fit-content;\r\n  padding: 4px;\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  border: 1px solid grey;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: blue;\r\n    border-color: blue;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { addContact } from \"../../redux/PhoneBook/PhonebookActions\";\r\nimport { contacts } from \"../../redux/PhoneBook/PhonebookSelectors\";\r\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const stateContacts = useSelector(contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    switch (e.target.name) {\r\n      case \"name\":\r\n        setName(e.target.value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    newContact();\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const notify = (name) => toast(`${name} is already in contacts`);\r\n\r\n  const newContact = () => {\r\n    const contactToAdd = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    stateContacts.some((contact) => contact.name === contactToAdd.name)\r\n      ? notify(contactToAdd.name)\r\n      : dispatch(addContact(contactToAdd));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form action=\"\" onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"name\">Name</Label>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <Label htmlFor=\"number\">Number</Label>\r\n        <Input\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n      <Toaster\r\n        position=\"top-center\"\r\n        toastOptions={{\r\n          duration: 3000,\r\n          style: {\r\n            background: \"#f8cd98\",\r\n            color: \"#000\",\r\n          },\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 70px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 3px;\r\n  margin-top: 5px;\r\n  &:hover {\r\n    border-color: blue;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n`;\r\n","import { Wrapper, Input, Label } from \"./Filter.styled\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilterName } from \"../../redux/PhoneBook/PhonebookActions\";\r\nimport { filter } from \"../../redux/PhoneBook/PhonebookSelectors\";\r\n\r\nconst Filter = () => {\r\n  const formFilter = useSelector(filter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\r\n      <Input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={formFilter}\r\n        onChange={(e) => dispatch(getFilterName(e.target.value.toLowerCase()))}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchContactsAction } from \"../redux/PhoneBook/PhonebookOperations\";\r\nimport ContactList from \"../components/ContactsList/ContactList.jsx\";\r\nimport ContactForm from \"../components/ContactForm/ContactForm.jsx\";\r\nimport Filter from \"../components/Filter/Filter\";\r\n\r\nexport default function ContactsView(params) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(fetchContactsAction()), [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}