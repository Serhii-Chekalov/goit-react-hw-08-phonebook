{"version":3,"sources":["redux/phonebook/phonebookOperations.js","redux/auth/authSelectors.js","components/PrivateRoute.js","components/PublicRouter.js","components/Navigation.js","components/AuthNav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/App/App.js","redux/phonebook/phonebookReducers.js","redux/auth/authSlice.js","redux/store.js","index.js","components/AppBar/AppBar.module.css","redux/auth/authOperations.js","redux/phonebook/phonebookActions.js"],"names":["fetchContactsAction","createAsyncThunk","a","axios","get","console","log","message","addContactAction","contact","post","deleteContactAction","id","delete","authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","getIsFetching","isFetching","PrivateRoute","component","redirectTo","children","routeProps","useSelector","to","PublicRoute","restricted","shouldRedirect","Navigation","Navbar","Nav","exact","className","styles","link","activeClassName","activeLink","AuthNav","UserMenu","dispatch","useDispatch","type","onClick","logOut","AppBar","AsyncHomeView","lazy","AsyncLoginView","AsyncRegisterView","AsyncContactsView","App","useEffect","fetchCurrentUser","fallback","color","height","width","timeout","display","loader","path","entities","createReducer","fulfilled","_state","action","payload","data","filter","isLoading","pending","rejected","error","changeFilter","combineReducers","authSlice","createSlice","initialState","email","token","extraReducers","register","logIn","_action","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","phonebook","phonebookReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports","defaults","baseURL","headers","common","Authorization","credentials","rejectWithValue","_","thunkAPI","getState","persistedToken","createAction"],"mappings":"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","file":"static/js/main.3598d40c.chunk.js","sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const fetchContactsAction = createAsyncThunk('contacts/fetchContacts', async () => {\n  try {\n    return await axios.get('/contacts');\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nexport const addContactAction = createAsyncThunk('contacts/addContacts', async contact => {\n  try {\n    return await axios.post('/contacts', contact);\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nexport const deleteContactAction = createAsyncThunk('contacts/deleteContacts', async id => {\n  try {\n    await axios.delete(`/contacts/${id}`);\n    return id;\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\nconst getUserName = state => state.auth.user.name;\nconst getIsFetching = state => state.auth.isFetching;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUserName,\n  getIsFetching,\n};\n\nexport default authSelectors;\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from '../redux/auth/authSelectors';\n\nexport default function PrivateRoute({\n  component: Component,\n  redirectTo = '/',\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return <Route {...routeProps}>{isLoggedIn ? children : <Redirect to={redirectTo} />}</Route>;\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport authSelectors from '../redux/auth/authSelectors';\n\nexport default function PublicRoute({\n  restricted = false,\n  redirectTo = '/',\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return <Route {...routeProps}>{shouldRedirect ? <Redirect to={redirectTo} /> : children}</Route>;\n}\n","import { useSelector } from 'react-redux';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport styles from '../components/AppBar/AppBar.module.css';\nimport authSelectors from '../redux/auth/authSelectors';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Navbar>\n      <Nav>\n        <NavLink exact to=\"/\" className={styles.link} activeClassName={styles.activeLink}>\n          Main page\n        </NavLink>\n        {isLoggedIn && (\n          <NavLink to=\"/contacts\" className={styles.link} activeClassName={styles.activeLink}>\n            Contacts\n          </NavLink>\n        )}\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import { NavLink } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport styles from '../components/AppBar/AppBar.module.css';\n\nexport default function AuthNav() {\n  return (\n    <Navbar>\n      <Nav>\n        <NavLink to=\"/register\" className={styles.link} activeClassName={styles.activeLink}>\n          Registration\n        </NavLink>\n        <NavLink to=\"/login\" className={styles.link} activeClassName={styles.activeLink}>\n          Login\n        </NavLink>\n      </Nav>\n    </Navbar>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Navbar } from 'react-bootstrap';\nimport authSelectors from '../../redux/auth/authSelectors';\nimport { logOut } from '../../redux/auth/authOperations';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n\n  return (\n    <Navbar>\n      <p className=\"greetings\">Welcome, {name} </p>\n      <button className=\"btn-logout\" type=\"button\" onClick={() => dispatch(logOut())}>\n        Exit\n      </button>\n    </Navbar>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Navbar } from 'react-bootstrap';\nimport Navigation from '../Navigation';\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu/UserMenu';\nimport authSelectors from '../../redux/auth/authSelectors';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Navbar>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </Navbar>\n  );\n}\n","import { useEffect, lazy, Suspense } from 'react';\nimport { Switch } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport PrivateRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRouter';\nimport AppBar from '../AppBar/AppBar';\nimport { fetchCurrentUser } from '../../redux/auth/authOperations';\nimport authSelectors from '../../redux/auth/authSelectors';\nimport styles from '../AppBar/AppBar.module.css';\n\nconst AsyncHomeView = lazy(() =>\n  import('../../views/homePageView' /* webpackChunkName: \"home-page\"*/),\n);\nconst AsyncLoginView = lazy(() =>\n  import('../../views/loginView' /* webpackChunkName: \"login-page\"*/),\n);\nconst AsyncRegisterView = lazy(() =>\n  import('../../views/registerView' /* webpackChunkName: \"register-page\"*/),\n);\nconst AsyncContactsView = lazy(() =>\n  import('../../views/contactsView' /* webpackChunkName: \"contacts-page\"*/),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetching = useSelector(authSelectors.getIsFetching);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser());\n  }, [dispatch]);\n\n  return !isFetching ? (\n    <div>\n      <AppBar />\n\n      <Suspense\n        fallback={\n          <Loader\n            type=\"Rings\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            timeout={3000}\n            display=\"flex\"\n            justify-content=\"center\"\n            className={styles.loader}\n          />\n        }\n      >\n        <Switch>\n          <PublicRoute exact path=\"/\">\n            <AsyncHomeView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/register\" redirectTo=\"/contacts\" restricted>\n            <AsyncRegisterView />\n          </PublicRoute>\n\n          <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <AsyncLoginView />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n            <AsyncContactsView />\n          </PrivateRoute>\n        </Switch>\n      </Suspense>\n    </div>\n  ) : null;\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './phonebookActions';\nimport { fetchContactsAction, addContactAction, deleteContactAction } from './phonebookOperations';\n\nconst entities = createReducer([], {\n  [fetchContactsAction.fulfilled]: (_state, action) => action.payload.data,\n  [addContactAction.fulfilled]: (state, { payload }) => [payload.data, ...state],\n  [deleteContactAction.fulfilled]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsAction.pending]: () => true,\n  [fetchContactsAction.fulfilled]: () => false,\n  [fetchContactsAction.rejected]: () => false,\n  [deleteContactAction.fulfilled]: () => false,\n  [deleteContactAction.pending]: () => true,\n  [deleteContactAction.rejected]: () => false,\n  [addContactAction.fulfilled]: () => false,\n  [addContactAction.pending]: () => true,\n  [addContactAction.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsAction.rejected]: (_state, action) => action.payload,\n  [fetchContactsAction.pending]: () => null,\n  [addContactAction.pending]: () => null,\n  [addContactAction.rejected]: (_state, action) => action.payload,\n  [deleteContactAction.pending]: () => null,\n  [deleteContactAction.rejected]: (_state, action) => action.payload,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_state, { payload }) => payload,\n});\n\nexport default combineReducers({ entities, isLoading, error, filter });\n","import { createSlice } from '@reduxjs/toolkit';\nimport { register, logIn, logOut, fetchCurrentUser } from './authOperations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetching: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [register.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logIn.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [logOut.fulfilled](state, _action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [fetchCurrentUser.pending](state) {\n      state.isFetching = true;\n    },\n    [fetchCurrentUser.fulfilled](state, { payload }) {\n      state.user = payload;\n      state.isLoggedIn = true;\n      state.isFetching = false;\n    },\n    [fetchCurrentUser.rejected](state) {\n      state.isFetching = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebookReducers';\nimport authReducer from './auth/authSlice';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    phonebook: phonebookReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../src/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"AppBar_nav__Kwi-w\",\"link\":\"AppBar_link__2cIXF\",\"activeLink\":\"AppBar_activeLink__36Odk AppBar_link__2cIXF\",\"loader\":\"AppBar_loader__2bedc\"};","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nexport const token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.data);\n    }\n  },\n);\n\nexport const logIn = createAsyncThunk('auth/login', async (credentials, { rejectWithValue }) => {\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.data);\n  }\n});\n\nexport const logOut = createAsyncThunk('auth/logout', async (_, { rejectWithValue }) => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    return rejectWithValue(error.data);\n  }\n});\n\nexport const fetchCurrentUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\n  const state = thunkAPI.getState();\n  const persistedToken = state.auth.token;\n\n  if (persistedToken === null) {\n    return thunkAPI.rejectWithValue();\n  }\n  token.set(persistedToken);\n  try {\n    const { data } = await axios.get('/users/current');\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.data);\n  }\n});\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n"],"sourceRoot":""}